"""
Django settings for weilaiDemo project.

Generated by 'django-admin startproject' using Django 1.9.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from conf.dbconf import MYSQL_USER_MAIN, MYSQL_HOST_MAIN, MYSQL_PORT_MAIN, MYSQL_PWD_MAIN, MYSQL_DB_MAIN
from conf.commonconf import IS_DEBUG, STATIC_URL_CONF, MEMCACHE_HOST
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'k49s-gem&h$xby7dv&^)ybou%$%r+41e4vld*c^^6%jg_%m%&3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp.home',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

# 将session直接保存到缓存中（不经过数据库）
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# session有效期：300分钟
SESSION_COOKIE_AGE = 60 * 300
# False：会话cookie可以在用户浏览器中保持有效期。True：关闭浏览器，则Cookie失效
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

ROOT_URLCONF = 'weilaiDemo.urls'


WSGI_APPLICATION = 'weilaiDemo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        "NAME": MYSQL_DB_MAIN,
        "USER": MYSQL_USER_MAIN,
        "PASSWORD": MYSQL_PWD_MAIN,
        "HOST": MYSQL_HOST_MAIN,
        "PORT": MYSQL_PORT_MAIN,
    }
}
# 缓存设置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': MEMCACHE_HOST,
        # 超时时间，单位秒
        'TIMEOUT': None,
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

# 模板页中静态地址
STATIC_URL = STATIC_URL_CONF

# 静态资源目录配置
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# 模板页目录配置
TEMPLATE_DIRS = (
    os.path.join(BASE_DIR, 'template'),
)

# 模板中用到的类库配置
TEMPLATE_CONTEXT_PROCESSORS = (
    "django.contrib.auth.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
    "django.core.context_processors.request",
    'django.contrib.auth.context_processors.auth',
)

# 系统日志配置-----------------------------Begin-------------------------------------
Log_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__),
                                        os.path.pardir))
lformat = '%(asctime)s [%(threadName)s:%(thread)d]'
lformat += ' [%(name)s:%(lineno)d] [%(levelname)s]- %(message)s'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': lformat
        },
    },
    'filters': {
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        },
        'default': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(Log_ROOT + "/log/", 'default.log'),
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
            'formatter': 'standard',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'debug_handler': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(Log_ROOT + "/log/", 'debug.log'),
            'maxBytes': 1024 * 1024 * 5,  # 5 MB
            'backupCount': 5,
            'formatter': 'standard',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['default', 'console'],
            'level': 'INFO',
            'propagate': False
        },
        '': {
            'handlers': ['debug_handler'],
            'level': 'INFO',
            'propagate': True
        },
    }
}
# 系统日志配置-----------------------------End-------------------------------------